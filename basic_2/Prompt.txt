**Prompt:**

You are an expert academic summarizer and synthesis engine. Your task is to create a comprehensive, concise, and coherent abstract that synthesizes the key information, main arguments, findings, and conclusions presented in each text provided. 

**Input:**
You will be provided with a list of strings, where each string represents the full text of a source document. Each source text will be clearly delimited by `---SOURCE_START---` and `---SOURCE_END---`. Please process all provided texts as a single corpus of information.

**Output Requirements:**

1.  **Content:**
    *   Identify the overarching theme, research question, or central topic addressed by the collection of sources.
    *   Synthesize the primary arguments, methodologies (if relevant and common across sources), and key findings or insights from the sources.
    *   Highlight any significant agreements, disagreements, or different perspectives that emerge from the texts.
    *   Conclude with the overall implications, a summary of the collective insights, or the main takeaway from the combined information.

2.  **Format & Style:**
    *   The abstract should be a single, coherent paragraph.
    *   Aim for a length of approximately **150-250 words** (adjust this range based on the expected complexity and number of your sources).
    *   Maintain an objective, academic, and formal tone.
    *   Avoid direct quotes unless absolutely essential for conveying a specific concept, and if so, keep them very brief.
    *   Do not include citations or references within the abstract itself.
    *   Do not introduce the sources individually (e.g., "Source 1 states...", "According to the second text..."). Instead, integrate the information seamlessly as if it were from a single, unified study.

**Example of Input Format:**

```
---SOURCE_START---
[Full text of Source 1]
---SOURCE_END---

---SOURCE_START---
[Full text of Source 2]
---SOURCE_END---
____________________________________________________________________
**Prompt:**

"Generate a multiple-choice quiz based on the following list of text strings.

**Source Texts:**
[PASTE_YOUR_LIST_OF_STRINGS_HERE]
(e.g., ["String 1: The quick brown fox jumps over the lazy dog.", "String 2: The dog was very tired."])

**Quiz Parameters:**
1.  **Number of Questions:** [NUMBER_OF_QUESTIONS_DESIRED] (e.g., 5, 10, 15)
2.  **Propositions per Question:** Each question should have exactly 4 propositions (options: A, B, C, D).
3.  **Correct Answer Indication:** Clearly mark the correct answer with "(Correct)" next to the option.
4.  **Distractor Quality:** Ensure incorrect options (distractors) are plausible but clearly incorrect. They should ideally be derived from the source material (e.g., misinterpretations, details from other parts of the text) or common misconceptions related to the topic, rather than obviously wrong or irrelevant.
5.  **Question Types:** Vary the question types to test different aspects of understanding (e.g., factual recall, inferential reasoning, understanding of key concepts, identification of main ideas, vocabulary).
6.  **Focus/Scope (Optional):** [Specify if you want the quiz to focus on a particular aspect, e.g., "Focus on key events," "Emphasize character motivations," "Test understanding of technical terms," "Avoid questions requiring external knowledge."]
7.  **Tone:** Maintain a clear, concise, and objective tone. Avoid ambiguous or trick questions.

**Output Format:**
Present each question numbered, followed by its four lettered options, with the correct option clearly marked.

**Example Output Format:**
1. What is the main color of the fox mentioned in the text?
   A) Black
   B) Red
   C) Brown (Correct)
   D) White

2. According to the text, what was the dog's state?
   A) Energetic
   B) Playful
   C) Very tired (Correct)
   D) Hungry
"

---
result.html : l8 parcours de la donn√©e si dictionaire
{% for filename, text in results.items() %}
        <h2>{{ filename }}</h2>
        <textarea rows="20" cols="100">{{ text }}</textarea>
        <hr>
    {% endfor %}